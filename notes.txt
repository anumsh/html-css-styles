Calculating Specificity:
     The Higher the specificity weight of a selector, the most superiority the selector is given when a styling conflict occurs.
     ID selector: hold the oint value of 1-0-0.
     Class selector: hold the value of 0-1-0.
     Type selector: hold the value of 0-0-1.
     
     For example: if the paragraph element is slected usinh type slector in one place and an ID selector in another place, the ID selector will take the precedence over type selector.
     
 -------------------------------------------------------------------------------------------------------------------------------------    
     The Cascade:
     
     p
     {
     background:orange;
     font-size:24px;
     }
     
     p {
     background: green;
     }
     
     in above example:  paragraph selector that sets the background color to green comes after the paragraph selector that sets the background color to orange, it will take precedence. 
     
     green background will appear.
-----------------------------------------------------------------------------------------------------------------------------------     
     
     combining selector:
     
     HTML

<div class="hotdog">
  <p>...</p>
  <p>...</p>
  <p class="mustard">...</p>
</div>

              
CSS

.hotdog p {
  background: brown;
}
.hotdog p.mustard {
  background: yellow;
}

new class selector, mustard, falls all the way to the right of the combined selector, it is the key selector, and all of the individual selectors coming before it are now prequalifiers.
---------------------------------------------------------------------------------------------------------------

Using multiple classes, we can layer on as many styles as we wish, keeping our code lean and our specificity weights low. 

HTML 

<a class="btn btn-danger">...</a>
<a class="btn btn-success">...</a>

              
CSS

.btn {
  font-size: 16px;
}
.btn-danger {
  background: red;
}
.btn-success {
  background: green;
}

              
------------------------------------------------------------------------------------------------------------------------

BOX MODEL:

Letâ€™s look these properties inside some code:

div {
  border: 6px solid #949599;
  height: 100px;
  margin: 20px;
  padding: 20px;
  width: 400px;
}

              
According to the box model, the total width of an element can be calculated using the following formula:


margin-right + border-right + padding-right + width + padding-left + border-left + margin-left

              
In comparison, according to the box model, the total height of an element can be calculated using the following formula:


margin-top + border-top + padding-top + height + padding-bottom + border-bottom + margin-bottom

Using the formulas, we can find the total height and width of our example code.

Width: 492px = 20px + 6px + 20px + 400px + 20px + 6px + 20px
Height: 192px = 20px + 6px + 20px + 100px + 20px + 6px + 20px